# -*- coding: utf-8 -*-
"""Pandas Ex2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LzYrnj8I5avLppcO7sUgDU17l0zANKbu

Q1, Write a Pandas program to create and display a DataFrame from a specified
dictionary data which has the index labels.
Sample DataFrame:
exam_data = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily',
'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']
"""

import pandas as pd
import numpy as np

exam_data  = {'name': ['Anastasia', 'Dima', 'Katherine', 'James', 'Emily', 'Michael', 'Matthew', 'Laura', 'Kevin', 'Jonas'],
        'score': [12.5, 9, 16.5, np.nan, 9, 20, 14.5, np.nan, 8, 19],
        'attempts': [1, 3, 2, 3, 2, 3, 1, 1, 2, 1],
        'qualify': ['yes', 'no', 'yes', 'no', 'no', 'yes', 'yes', 'no', 'no', 'yes']}
labels = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']

df = pd.DataFrame(exam_data , index=labels)
print(df)

"""Q2, Write a Pandas program to display a summary of the basic information about
a specified DataFrame and its data.
"""

print(df.info())

"""Q3, Write a Pandas program to get the first 3 rows of a given DataFrame."""

print("First three rows of the data frame:")
print(df.iloc[:3])

"""Q4, Write a Pandas program to select the 'name' and 'score' columns from the DataFrame given in
Q1.
"""

print(df[['name', 'score']])

"""Q5, Write a Pandas program to select the specified columns and rows from a given data frame."""

print(df.iloc[[1, 3, 5, 6], [1, 3]])

"""Q6, Write a Pandas program to count the number of rows and columns of a DataFrame."""

total_rows=len(df.axes[0])
total_cols=len(df.axes[1])
print("Number of Rows: "+str(total_rows))
print("Number of Columns: "+str(total_cols))

"""Q7,Write a Pandas program to select the rows where the score is missing, i.e. is NaN."""

print(df[df['score'].isnull()])

"""Q8, Write a Pandas program to select the rows the score is between 15 and 20 (inclusive)."""

print(df[df['score'].between(15, 20)])

"""Q9, Write a Pandas program to select the rows where number of attempts in the examination is less
than 2 and score greater than 15.
"""

print(df[(df['attempts'] < 2) & (df['score'] > 15)])

"""Q10, Write a Pandas program to change the score in row 'd' to 11.5."""

print(df)

df.loc['d', 'score'] = 11.5
print(df)

"""Q11, Write a Pandas program to calculate the sum of the examination attempts by the students."""

print("\nSum of the examination attempts by the students:")
print(df['attempts'].sum())

"""Q12, Write a Pandas program to calculate the mean score for the students in DataFrame."""

print("Mean score:")
print(df['score'].mean())

"""Q13, Write a Pandas program to append a new row 'k' to DataFrame with given values for each column.
Now delete the new row and return the original data frame.
"""

print(df)
print("new row:")
df.loc['k'] = [1, 'Suresh', 'yes', 15.5]

print(df)

print("original  Data frame:")
df = df.drop('k')
print(df)

"""Q14, Write a Pandas program to sort the data frame first by 'name' in descending order, then by 'score'
in ascending order.
"""

print(df)
df.sort_values(by=['name', 'score'], ascending=[False, True])

print("\n")
print(df)

"""Q15, Write a Pandas program to replace the 'qualify' column contains the values 'yes' and 'no' with
True and False.
"""

print(df)
print("\n")
df['qualify'] = df['qualify'].map({'yes': True, 'no': False})
print(df)

"""Q16, Write a Pandas program to change the name 'James' to 'Suresh' in name column of the data
frame.
"""

print(df)
print("\nChange the name 'James' to ‘Suresh’:")
df['name'] = df['name'].replace('James', 'Suresh')
print(df)

"""Q17, Write a Pandas program to delete the 'attempts' column from the DataFrame."""

print(df)

print("\n")

df.pop('attempts')
print(df)

"""Q20,Write a Pandas program to get list from DataFrame column headers."""

print(list(df.columns.values))