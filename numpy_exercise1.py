# -*- coding: utf-8 -*-
"""Numpy Exercise1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vvzo_Ea-8bfHYkphk5KwHF9Tnfuz4-m1

Q1, write a Numpy program to get the numpy version and show the numpy build configuration.
"""

import numpy as np
print(np.__version__)
print(np.show_config())

"""Q2, write a Numpy program to get help on the add function."""

import numpy as np
print(np.info(np.add))

"""Q3, write a numpy program to test whether none of the elements of a given array is zero."""

import numpy as np
x = np.array([2, 4, 6, 8])
print(x)

print(np.all(x))
x = np.array([0, 2, 4, 6])

print(x)

print(np.all(x))

"""Q4, write a numpy program to test if any of the elements of a given array is non zero."""

import numpy as np
x = np.array([1, 0, 0, 0])

print(x)
print(np.any(x))

x = np.array([0, 0, 0, 0])
print(x)

print(np.any(x))

"""Q5, write a numpy program to test element-wise for finiteness(not infinity or not a number)"""

import numpy as np
a = np.array([1, 0, np.nan, np.inf])

print(a)

print(np.isfinite(a))

"""Q6, write a numpy program to test element-wise for positive or negative infinity."""

import numpy as np
a = np.array([1, 0, np.nan, np.inf])

print(a)

print(np.isinf(a))

"""Q7, write a numpy program to test element-wise for NaN of a given array."""

import numpy as np
a = np.array([1, 0, np.nan, np.inf])

print(a)

print(np.isnan(a))

"""Q8, write a numpy program to test element-wise for complex number, real number of a given array.
also test if a given number is a scalar type or not.
"""

import numpy as np
a = np.array([1+1j, 1+0j, 4.5, 3, 2, 2j])
print("Array")
print(a)
print("Complex number:")
print(np.iscomplex(a))
print("Real number:")
print(np.isreal(a))
print("Scalar type:")
print(np.isscalar(3.1))
print(np.isscalar([3.1]))

"""Q9, write a numpy program to create an element-wise comparison (greater, greater_equal, less and less_equal) of two given arrays."""

import numpy as np
x = np.array([3, 5])
y = np.array([2, 5])

print(x)
print(y)

print(np.greater(x, y))

print(np.greater_equal(x, y))

print(np.less(x, y))

print(np.less_equal(x, y))

"""Q10, write a numpy program to create an array of 10 zeros, an array of 10 ones and an array of 10 fives."""

import numpy as np
array=np.zeros(10)
print("An array of 10 zeros:")
print(array)
array=np.ones(10)
print("An array of 10 ones:")
print(array)
array=np.ones(10)*5
print("An array of 10 fives:")
print(array)

"""Q11, write a numpy program to create an array of the integers from 30 to 70.12"""

import numpy as np
array=np.arange(30,71)

print(array)

"""Q12, write a numpy program to create an array of all the even integers from 30 to 70."""

import numpy as np
array=np.arange(30,71,2)

print(array)

"""Q13, write a numpy program to create a 3x3 identity matrix."""

import numpy as np
array_2D=np.identity(3)
print('3x3 matrix:')
print(array_2D)

"""Q14, write a numpy program to generate a random number between 0 and 1.15"""

import numpy as np
rand_num = np.random.normal(0,1,1)

print(rand_num)

"""Q15, write a numpy program to generate an array of 15 random numbers from a standard normal distribution."""

import numpy as np
rand_num = np.random.normal(0,1,15)
print("15 random numbers from a standard normal distribution:")
print(rand_num)

"""Q16, write a numpy program to create a vector with values ranging from 15 to 55 and print all values except the first and last."""

import numpy as np
v = np.arange(15,55)

print(v)

print("All values except the first and last of the vector:")
print(v[1:-1])

"""Q17, write a numpy program to create a vector of length 10 with values evenly distributed between 5 and 50."""

import numpy as np
v = np.linspace(10, 49, 5)
print("Length 10 with values evenly distributed between 5 and 50:")
print(v)

"""Q18, write a numpy program to multiply the values of two given vectors."""

import numpy as np
x = np.array([1, 8, 3, 5])

print(x)
y= np.random.randint(0, 11, 4)

print(y)
result = x * y
print("Answer:")
print(result)

"""Q19, write a numpy program to create a 3x4 matrix filled with values from 10 to 21."""

import numpy as np
m= np.arange(10,22).reshape((3, 4))
print(m)

"""Q20, write a numpy program to create a 5x5 zero matrix with elements on the main diagonal equal to 1,2,3,4,5."""

import numpy as np
x = np.diag([1, 2, 3, 4, 5])
print(x)

"""Q21, write a numpy program to compute sum of all elements, sum of each column and sum of each row of an given array."""

import numpy as np
x = np.array([[0,1],[2,3]])

print(x)
print("Sum of all elements:")
print(np.sum(x))
print("Sum of each column:")
print(np.sum(x, axis=0))
print("Sum of each row:")
print(np.sum(x, axis=1))